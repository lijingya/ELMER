% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main_function.R
\name{get.permu}
\alias{get.permu}
\title{get.permu to generate permutation results for calculation of empirical P values for
each enhancer-gene linkage.}
\usage{
get.permu(data, geneID, percentage = 0.2, rm.probes = NULL, portion = 0.3, permu.size = 10000, permu.dir = NULL, cores = 1)
}
\arguments{
\item{data}{A multiAssayExperiment with DNA methylation and Gene Expression data. See \code{\link{createMultiAssayExperiment function}}.}

\item{geneID}{A vector lists the genes' ID.}

\item{percentage}{A number ranges from 0 to 1 specifying the percentage of samples of group 1 and group 2
groups used to link probes to genes. Default is 0.2.}

\item{rm.probes}{A vector lists the probes name.}

\item{portion}{A number specify the cut point to define binary methlation level for probe loci. 
Default is 0.3. When beta value is above 0.3, the probe is methylated and 
vice versa. For one probe, the percentage of methylated or unmethylated samples 
should be above 0.05.
Default is 0.3.}

\item{permu.size}{A number specify the times of permuation. Default is 10000.}

\item{permu.dir}{A path where the output of permuation will be.}

\item{cores}{A interger which defines number of core to be used in parallel process.
Default is 1: don't use parallel process.}
}
\value{
Permutations
}
\description{
get.permu is a function to use the same statistic model to calculate random enhancer-gene 
pairs. Based on the permutation value, empirical P value can be calculated for the 
real enhancer-gene pair (see reference).
}
\note{
Permutation is the most time consuming step. It is recommended to use multiple  
cores for this step. Default permutation time is 1000 which may need 12 hrs by 4 cores. 
However 10,000 permutations is recommended to get high confidence results. But it may cost 2 days.
}
\examples{
load(system.file("extdata","mee.example.rda",package = "ELMER"))
gene.info <- TCGAbiolinks:::get.GRCh.bioMart()
gene.info <- gene.info[match(gsub("ID","",rownames(mee@exp)),gene.info$entrezgene),]
exp <- mee@exp
rownames(exp) <- gene.info$ensembl_gene_id
exp <- exp[!is.na(rownames(exp)),]
data <- createMultiAssayExperiment(exp = exp, met = mee@meth, TCGA = T, genome = "hg19" )
permu <-get.permu(data = data,
                  geneID=rownames(getExp(data)),
                  rm.probes=c("cg00329272","cg10097755"),
                  permu.size=5)
}
\author{
Lijing Yao (creator: lijingya@usc.edu) 
Tiago C Silva (maintainer: tiagochst@usp.br)
}
\references{
Yao, Lijing, et al. "Inferring regulatory element landscapes and transcription 
factor networks from cancer methylomes." Genome biology 16.1 (2015): 1.
}

